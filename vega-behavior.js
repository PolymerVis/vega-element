"use strict";!function(e){e.VegaBehavior={properties:{loading:{type:Boolean,readonly:!0,value:!1},requestData:{type:Object},lastData:{type:Object,notify:!0,readonly:!0},data:{type:Object,readonly:!0,value:null},view:{type:Object,readonly:!0,notify:!0},spec:{type:Object},renderer:{type:String,value:"canvas"},signal:{type:Object},observeSignals:{type:Array,observer:"_observeSignalsChanged"},lastSignal:{type:Object,readonly:!0,notify:!0},_chart:{type:Object}},observers:["parse(spec)","updateSignal(signal,view)","getData(requestData,view)"],parse:function(e){if(e){this.loading=!0;var a=this;vg.parse.spec(e,function(e,t){a._chart=t})}},updateSignal:function(e,a){if(e&&(a=a||this.view)){var t=this;this.loading=!0,a.signal(e.name,e.value).update(),this.async(function(){t.getData(t.requestData,t.view)},500),this.loading=!1}},getData:function(e,a){if(e&&(a=a||this.view)){var t={},n=Array.isArray(e)?e:[e];return n.forEach(function(e){t[e]=a.data(e).values()}),this.set("lastData",t),this.lastData}},_observeSignalsChanged:function(e,a){var t=this._difference(e,a),n=t.added,i=t.removed;console.log(n),console.log(i),this._updateSignalListeners(n,i)},_difference:function(e,a){var t=new Map;e.forEach(function(e){return t.set(e,1)}),a.forEach(function(e){return t.set(e,t.has(e)?3:2)});var n=[],i=[],r=!0,s=!1,o=void 0;try{for(var l,c=t[Symbol.iterator]();!(r=(l=c.next()).done);r=!0){var u=l.value;1===u[1]&&n.push(u[0]),2===u[1]&&i.push(u[0])}}catch(f){s=!0,o=f}finally{try{!r&&c["return"]&&c["return"]()}finally{if(s)throw o}}return{added:n,removed:i}},_updateSignalListeners:function(e,a,t){if(t=t||this.view){var n=this;e.forEach(function(e){t.onSignal(e,function(a,t){var i={signal:a,value:t};n.lastSignal=i,n.fire(e,i)})}),a.forEach(t.offSignal)}}}}(window.Hiveoss=window.Hiveoss||{});